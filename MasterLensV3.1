# Master Lens Web App - v3.1 (Refined)
import streamlit as st
import google.generativeai as genai

# --- PAGE CONFIGURATION ---
st.set_page_config(
    page_title="The Master Lens v3.1",
    page_icon="ðŸŽ­",
    layout="wide"
)

st.title("ðŸŽ­ The Master Lens")
st.write("An AI-powered analytical partner for creative works.")

# --- PROMPT DEFINITIONS ---
LENSES = {
    "Structural & Formalist": "...",
    "Psychological": {
        "sub_lenses": {
            "Jungian": "...",
            "Freudian": "...",
            "Evolutionary Psychology": """
Analyze the following creative work using an Evolutionary Psychology lens.
- Explore how the work's themes (e.g., love, conflict, status) can be interpreted as strategies for survival, reproduction, and gene propagation.
- Discuss any displays of primal instincts or subconscious assessments of mate value, social hierarchies, or environmental threats.
The work is as follows:
"""
        }
    },
    "Philosophical": {
        "sub_lenses": {
            "Existentialist": "...",
            "Taoist": "...",
            "Phenomenological": """
Analyze the following creative work from a Phenomenological perspective.
- Disregard authorial intent, historical context, and formal structure. Focus entirely on the subjective, 'lived experience' of the work.
- Describe the sensory, emotional, and cognitive journey the work creates for the viewer/reader from a first-person perspective.
- What is it like to *experience* this piece?
The work is as follows:
"""
        }
    },
    "Socio-Political": {
        "sub_lenses": {
            "Marxist": "...",
            "Feminist": "...",
            "Post-Colonial": "..."
        }
    },
    "Historical & Biographical": "...",
    "Comparative": "..."
}

# --- HELPER FUNCTIONS ---
# Functions for get_model, generate_analysis, etc. remain the same

# --- SIDEBAR UI ---
with st.sidebar:
    st.header("Setup")
    api_key = st.text_input("Enter your Gemini API Key", type="password")
    
    st.header("Analytical Protocol")
    analysis_mode = st.radio("Select Analysis Mode:", ("Single Lens", "Dialectical Dialogue"))

    if analysis_mode == "Single Lens":
        # Hierarchical selection for single lens
        main_lens = st.selectbox("Category:", list(LENSES.keys()))
        if "sub_lenses" in LENSES[main_lens]:
            sub_lens = st.selectbox("Specific Lens:", list(LENSES[main_lens]["sub_lenses"].keys()))
            st.session_state.selection = f"{main_lens} ({sub_lens})"
        else:
            st.session_state.selection = main_lens
    
    elif analysis_mode == "Dialectical Dialogue":
        # Multi-select for dialectical dialogue
        all_lenses = []
        for main, data in LENSES.items():
            if "sub_lenses" in data:
                for sub in data["sub_lenses"]:
                    all_lenses.append(f"{main} ({sub})")
            else:
                all_lenses.append(main)
        
        selected_lenses = st.multiselect("Select two lenses to synthesize:", sorted(all_lenses), max_selections=2)
        st.session_state.selection = selected_lenses

# --- MAIN PAGE LOGIC ---
# ... [Main logic to handle the two modes based on st.session_state.selection] ...
# This section would check the mode, ensure the correct number of lenses are selected,
# and then display the appropriate input forms and call the correct analysis functions.
